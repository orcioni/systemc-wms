// nature/threephase
// (C) 2005-2006 Giorgio Biagetti and Simone Orcioni
/*
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

#ifndef NATURE_THREEPHASE_H
#define NATURE_THREEPHASE_H

#include "../wave_system"
#include <complex>

struct threephase : nature <std::complex <double> >
{
	struct dump_type {double phase[3];};
	static const char *across ()  {return "voltage";}
	static const char *through () {return "current";}
	static void dump_transform (wave_type const &in, dump_type &out)
	{
//		const double pi = 3.1415926535897932384626433832795;
		out.phase[0] =  in.real() * sqrt(2.0/3.0) + in.imag() * 0;
		out.phase[1] = -in.real() / sqrt(6.0) + in.imag() /sqrt(2.0);
		out.phase[2] = -in.real() / sqrt(6.0) - in.imag() /sqrt(2.0);
	}
};

#include "../sys/complex_tracer"

#endif // NATURE_THREEPHASE_H
